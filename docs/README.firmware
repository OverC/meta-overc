Shared Firmware
-------------------------

Since one of the goals for cube-essential is to keep a small
footprint, the kernel firmware files pose a specific challenge. The
/lib/firmware directory amounts to about half the total size of the
cube-essential image. With such a large portion of the image being
firmware, many updates to cube-essential could be triggered by the
need to update firmware (yes the # of updates isn't proportional to
the size ratio but it is also non-zero).

With the above in mind it was determined that the firmware could be
linked in from dom0 and dom0 will be the only location required for
updates.

Filesystem changes
-------------------------

cube-essential
---
In cube-essential '/lib/firmware' is no longer populated with firmware
blobs and associated files/directories. '/lib/firmware' becomes a link
to '/opt/container/dom0/rootfs/lib/firmware'.

NOTE: To accomplish the above you can examine the
linux-firmware-cube-shared package (linux-firmware_git.bbappend)

In order to facilitate the firmware living in the /opt/container
directory a systemd service called essential-opt-mount.service was
added which runs right after the systemd-remount-fs.service.  This
ensures all the proper file systems are mounted by the time the
firmware needs to load.

dom0
---
In dom0 you will find a '/lib/firmware' directory populated with
firmware related files, per usual.

Syncing
-------------------------

Updating the cube-essential firmware now involves ensuring that you
have updated dom0. A typical update now might
look like one of the following:

1)
  a) replace dom0 (with the new image containing '/lib/firmware' updates)
  b) reload cube-essential kernel modules affected by firmware updates

2)
  a) update dom0 (with firmware related package updates)
  b) reload cube-essential kernel modules affected by firmware updates

3)
  a) update or replace dom0 (including firmware updates)
  b) reboot the system

NOTE that it may not always be possible to complete an update, which
includes firmware updates, without having to perform a system
reboot. This change doesn't change this but rather provides additional
options to the system designer that can often avoid a system reboot in
most cases.
