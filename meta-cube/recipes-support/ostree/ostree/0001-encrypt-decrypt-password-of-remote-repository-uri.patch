From c6ef852ca138075bf80ccb28e37c820ee20bb0b3 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Thu, 7 Jun 2018 14:35:27 +0800
Subject: [PATCH] encrypt/decrypt password of remote repository uri

Test:
ostree remote add pulsar-linux http://user1:123456@128.224.156.107/pulsar-linux/intel-corei7-64 --repo /tmp/hjia/ostree_repo
ostree remote --repo=/tmp/hjia/ostree_repo/  show-url pulsar-linux
ostree pull --repo=/tmp/hjia/ostree_repo/ pulsar-linux:cube-gw-ostree-runtime

Decrypt:
echo U2FsdGVkX1/VbvOE5EWkbuq/9h06pKX1OjXNx117CPw= | openssl enc -d -aes-256-cbc -md md5 -base64 -salt -pass pass:incendia 2>/dev/null

http://user1:123456@128.224.156.107/pulsar-linux/intel-corei7-64

Encrypt:
$ echo 123456 | openssl enc -e -aes-256-cbc -md md5 -base64 -salt -pass pass:incendia

http://user1:U2FsdGVkX1%2FVbvOE5EWkbuq%2F9h06pKX1OjXNx117CPw%3D@128.224.156.107/pulsar-linux/intel-corei7-64

Upstream-Status: Pending

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 src/libostree/libostree-released.sym    |   1 +
 src/libostree/ostree-repo-pull.c        |   8 +-
 src/libostree/ostree-repo.c             | 149 +++++++++++++++++++++++++++++++-
 src/libostree/ostree-repo.h             |   8 ++
 src/ostree/ot-remote-builtin-list.c     |   2 +-
 src/ostree/ot-remote-builtin-show-url.c |   2 +-
 6 files changed, 162 insertions(+), 8 deletions(-)

diff --git a/src/libostree/libostree-released.sym b/src/libostree/libostree-released.sym
index b7d5785..58d5ab4 100644
--- a/src/libostree/libostree-released.sym
+++ b/src/libostree/libostree-released.sym
@@ -215,6 +215,7 @@ global:
         ostree_repo_remote_get_gpg_verify;
         ostree_repo_remote_get_gpg_verify_summary;
         ostree_repo_remote_get_url;
+        ostree_repo_remote_get_url_internal;
         ostree_repo_remote_gpg_import;
         ostree_repo_remote_list;
         ostree_repo_remote_list_refs;
diff --git a/src/libostree/ostree-repo-pull.c b/src/libostree/ostree-repo-pull.c
index 2e6e308..da2abe1 100644
--- a/src/libostree/ostree-repo-pull.c
+++ b/src/libostree/ostree-repo-pull.c
@@ -2981,7 +2981,7 @@ repo_remote_fetch_summary (OstreeRepo    *self,
       url_string = g_strdup (metalink_url_string);
     else if (url_override)
       url_string = g_strdup (url_override);
-    else if (!ostree_repo_remote_get_url (self, name, &url_string, error))
+    else if (!ostree_repo_remote_get_url_internal (self, name, &url_string, TRUE, error))
       goto out;
 
     if (metalink_url_string == NULL &&
@@ -3525,7 +3525,7 @@ ostree_repo_pull_with_options (OstreeRepo             *self,
 
       if (url_override != NULL)
         baseurl = g_strdup (url_override);
-      else if (!ostree_repo_remote_get_url (self, remote_name_or_baseurl, &baseurl, error))
+      else if (!ostree_repo_remote_get_url_internal (self, remote_name_or_baseurl, &baseurl, TRUE, error))
         goto out;
 
       if (g_str_has_prefix (baseurl, "mirrorlist="))
@@ -5096,8 +5096,8 @@ find_remotes_cb (GObject      *obj,
               g_autofree gchar *uri = NULL;
               g_autoptr(OstreeFetcherURI) fetcher_uri = NULL;
 
-              if (!ostree_repo_remote_get_url (self, result->remote->name,
-                                               &uri, &error))
+              if (!ostree_repo_remote_get_url_internal (self, result->remote->name,
+                                               &uri, TRUE, &error))
                 goto error;
 
               fetcher_uri = _ostree_fetcher_uri_parse (uri, &error);
diff --git a/src/libostree/ostree-repo.c b/src/libostree/ostree-repo.c
index 61bf162..2351970 100644
--- a/src/libostree/ostree-repo.c
+++ b/src/libostree/ostree-repo.c
@@ -41,6 +41,13 @@
 #include "ot-fs-utils.h"
 #include "ostree-autocleanups.h"
 
+#include <libsoup/soup.h>
+#include <libsoup/soup-requester.h>
+#include <libsoup/soup-request-http.h>
+
+#include <stdlib.h>
+#include <string.h>
+
 #include <locale.h>
 #include <glib/gstdio.h>
 #include <sys/file.h>
@@ -213,6 +220,115 @@ typedef struct {
   const char *name;
 } OstreeRepoLockInfo;
 
+static int invoke_program(const char*cmd, char *out, int out_len)
+{
+    FILE *fp;
+
+#ifdef DEBUG
+    printf("CMD: %s\n", cmd);
+#endif
+    if ((fp = popen(cmd, "r")) == NULL)
+    {
+        printf("Error opening pipe!\n");
+        return -1;
+    }
+
+    while (fgets(out, out_len, fp) != NULL)
+    {
+#ifdef DEBUG
+        printf("OUTPUT: %s", out);
+#endif
+
+        // Strip newline
+        char *pos;
+        if ((pos=strchr(out, '\n')) != NULL)
+           *pos = '\0';
+    }
+
+    if(pclose(fp))
+    {
+#ifdef DEBUG
+        printf("Command not found or exited with error status\n");
+#endif
+        return -1;
+    }
+
+    return 0;
+}
+
+
+
+static gboolean
+ostree_encrypt_url (const char  *url,
+                    char       **out_url)
+{
+
+  SoupURI *uri;
+
+  if (out_url != NULL)
+  {
+    uri = soup_uri_new (url);
+
+    if (uri->password != NULL)
+    {
+        char cmd[1024];
+        char out[1024];
+        sprintf(cmd, "echo %s | openssl enc -e -aes-256-cbc -md md5 -base64 -salt -pass pass:%s",
+                     uri->password, "incendia");
+        invoke_program(cmd, out, sizeof(out));
+        g_free (uri->password);
+        uri->password = g_strdup (out);
+    }
+
+    *out_url = soup_uri_to_string_with_password (uri, FALSE);
+#ifdef DEBUG
+    printf("%s %d, user %s, uri %s\n", __FUNCTION__, __LINE__, uri->user, *out_url);
+#endif
+    soup_uri_free (uri);
+  }
+
+  return TRUE;
+}
+
+static gboolean
+ostree_decrypt_url (const char  *url,
+                    char       **out_url,
+                    gboolean   show_password)
+{
+  SoupURI *uri;
+
+  if (out_url != NULL)
+  {
+    uri = soup_uri_new (url);
+
+    if (uri->password != NULL)
+    {
+        char cmd[1024];
+        char out[1024];
+        sprintf(cmd, "echo %s | openssl enc -d -aes-256-cbc -md md5 -base64 -salt -pass pass:%s 2>/dev/null",
+                      uri->password, "incendia");
+        if (!invoke_program(cmd, out, sizeof(out)))
+        {
+            g_free (uri->password);
+            uri->password = g_strdup (out);
+        }
+    }
+
+    if (show_password == TRUE)
+        *out_url = soup_uri_to_string_with_password (uri, FALSE);
+    else
+        *out_url = soup_uri_to_string (uri, FALSE);
+#ifdef DEBUG
+    printf("%s %d, user %s, uri %s\n", __FUNCTION__, __LINE__, uri->user, *out_url);
+#endif
+    soup_uri_free (uri);
+  }
+
+
+  return TRUE;
+}
+
+
 static void
 repo_lock_info (OstreeRepoLock *lock, OstreeRepoLockInfo *out_info)
 {
@@ -1598,7 +1714,13 @@ impl_repo_remote_add (OstreeRepo     *self,
   if (g_str_has_prefix (url, "metalink="))
     g_key_file_set_string (remote->options, remote->group, "metalink", url + strlen ("metalink="));
   else
-    g_key_file_set_string (remote->options, remote->group, "url", url);
+  {
+
+    char *encrypt_url;
+    ostree_encrypt_url(url, &encrypt_url);
+    g_key_file_set_string (remote->options, remote->group, "url", encrypt_url);
+    g_free (encrypt_url);
+  }
 
   if (options)
     keyfile_set_from_vardict (remote->options, remote->group, options);
@@ -1869,6 +1991,28 @@ ostree_repo_remote_get_url (OstreeRepo  *self,
                             char       **out_url,
                             GError     **error)
 {
+  return ostree_repo_remote_get_url_internal(self, name, out_url, FALSE, error);
+}
+
+/**
+ * ostree_repo_remote_get_url_internal:
+ * @self: Repo
+ * @name: Name of remote
+ * @out_url: (out) (allow-none): Remote's URL
+ * @error: Error
+ *
+ * Return the URL of the remote named @name through @out_url.  It is an
+ * error if the provided remote does not exist.
+ *
+ * Returns: %TRUE on success, %FALSE on failure
+ */
+gboolean
+ostree_repo_remote_get_url_internal (OstreeRepo  *self,
+                            const char  *name,
+                            char       **out_url,
+                            gboolean   show_password,
+                            GError     **error)
+{
   g_return_val_if_fail (name != NULL, FALSE);
 
   g_autofree char *url = NULL;
@@ -1890,7 +2034,8 @@ ostree_repo_remote_get_url (OstreeRepo  *self,
     }
 
   if (out_url != NULL)
-    *out_url = g_steal_pointer (&url);
+    ostree_decrypt_url(url, out_url, show_password);
+
   return TRUE;
 }
 
diff --git a/src/libostree/ostree-repo.h b/src/libostree/ostree-repo.h
index e2608d8..18a0c04 100644
--- a/src/libostree/ostree-repo.h
+++ b/src/libostree/ostree-repo.h
@@ -234,6 +234,14 @@ gboolean      ostree_repo_remote_get_url (OstreeRepo   *self,
                                           GError      **error);
 
 _OSTREE_PUBLIC
+gboolean      ostree_repo_remote_get_url_internal (OstreeRepo   *self,
+                                          const char   *name,
+                                          char        **out_url,
+                                          gboolean    show_password,
+                                          GError      **error);
+
+
+_OSTREE_PUBLIC
 gboolean      ostree_repo_remote_get_gpg_verify (OstreeRepo  *self,
                                                  const char  *name,
                                                  gboolean    *out_gpg_verify,
diff --git a/src/ostree/ot-remote-builtin-list.c b/src/ostree/ot-remote-builtin-list.c
index eb5a1ba..5f3b83a 100644
--- a/src/ostree/ot-remote-builtin-list.c
+++ b/src/ostree/ot-remote-builtin-list.c
@@ -62,7 +62,7 @@ ot_remote_builtin_list (int argc, char **argv, OstreeCommandInvocation *invocati
         {
           g_autofree char *remote_url = NULL;
 
-          if (!ostree_repo_remote_get_url (repo, remotes[ii], &remote_url, error))
+          if (!ostree_repo_remote_get_url_internal (repo, remotes[ii], &remote_url, FALSE, error))
             goto out;
 
           g_print ("%-*s  %s\n", max_length, remotes[ii], remote_url);
diff --git a/src/ostree/ot-remote-builtin-show-url.c b/src/ostree/ot-remote-builtin-show-url.c
index 08274c1..d33245a 100644
--- a/src/ostree/ot-remote-builtin-show-url.c
+++ b/src/ostree/ot-remote-builtin-show-url.c
@@ -56,7 +56,7 @@ ot_remote_builtin_show_url (int argc, char **argv, OstreeCommandInvocation *invo
 
   remote_name = argv[1];
 
-  if (ostree_repo_remote_get_url (repo, remote_name, &remote_url, error))
+  if (ostree_repo_remote_get_url_internal (repo, remote_name, &remote_url, FALSE, error))
     {
       g_print ("%s\n", remote_url);
       ret = TRUE;
-- 
2.7.4

