#!/bin/bash

#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 2 as
#  published by the Free Software Foundation.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU General Public License for more details.

usage()
{
cat << EOF

 ${0##*/} <cmd>

  Execute <cmd> against a monitoring layer of the system. Note that
  this command does no sanity checking or other processing. It is
  the responsibility of the caller to ensure that the commands are
  valid at the essential layer.

EOF
}

# only dom0 has visibility to essential
if [ -d "/var/lib/cube/essential" ]; then
    we_are_dom0=t
fi

function do_essential_cmd()
{
    local auth_db="~/.overc/cube-cmd.auth"
    local auth_db_global="/etc/cube-cmd.auth"

    # When in dom0 we use the direct route and just exec the command
    # with no checking
    if [ -n "${we_are_dom0}" ]; then
	PATH="/var/lib/cube-cmd-server/functions.d/:$PATH"

	# This bumps us up to the parent namespace by default. We could also
	# use "host-cmd" from the functions.d, or have a way to explicitly
	# indicate if a command needs to go up to the next level of
	# namespaces.
	if [ -n "${raw_mode}" ]; then
	    ${cmd_options}
	else
	    # because we don't pass a control ipc channel, this will run in
	    # loopback mode, i.e. exec directly. The two calls to nctl could
	    # be unified (via a variable that evaluates to the empty string),
	    # but we keep them separate for now.
	    nctl ${cube_cmd_options} ${cmd_options}
	fi
	exit $?
    else
	# expands "~"
	eval auth_db=${auth_db}

	if [ -f "${auth_db}" ]; then
	    auth_file="${auth_db}"
	else
	    if [ -f "${auth_db_global}" ]; then
		auth_file="${auth_db_global}"
	    fi
	fi
	if [ -n "${auth_file}" ]; then
	    echo "${cube_cmd_options}" | grep -q -w "auth"
	    if [ $? -ne 0 ]; then
		# we have an auth file, and no --auth on the command line
		auth_file="--auth ${auth_file}"
	    fi
	fi
	nctl --ctrl-ipc /var/lib/cube/common/control.ipc ${auth_file} ${cube_cmd_options} ${cmd_options}
    fi
}

# take the command into an array
raw_command=($@)

if [ ${#raw_command[*]} -lt 1 ]; then
    usage
    exit
fi

dashdash=
while [ $# -gt 0 ]; do
    case "$1" in
	-v) verbose=t
            ;;
	-h|--help)
	    usage
	    exit
	    ;;
	--raw)
	    raw_mode=t
	    ;;
	--)
	    dashdash=t
	    ;;
        *)
	    if [ -z "${dashdash}" ]; then
		cube_cmd_options="${cube_cmd_options} $1"
	    else
		cmd_options="${cmd_options} $1"
	    fi
            ;;
    esac
    shift
done

if [ -z "${cmd_options}" ]; then
    cmd_options="${cube_cmd_options}"
    cube_cmd_options=""
fi

do_essential_cmd
