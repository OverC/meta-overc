#!/bin/bash

if [ "$1" = "stop" ] ; then
    pid=`/bin/machinectl show dom0 -p Leader --value`
    if [ ! -n "$pid" ] ; then
	exit 0
    fi


    if systemctl list-jobs shutdown.target | grep -q shutdown.target ; then
	kill -INT $pid
    else
	/bin/machinectl kill -s KILL dom0
    fi

    # Wait for signal to be processed by using tail against process pid
    # which continues immediately when the pid is already gone
    tail --pid=$pid -f /dev/null
    exit 0
fi

container_dir="/opt/container"

# if single_launch is set, then we don't use dtach, but instead let the
# container go directly at the tty
single_launch=t

echo "[INFO] auto starting containers ..."
for c in $(ls "${container_dir}/"); do
    if [ -d "${container_dir}/${c}" ]; then
	if [ -e "${container_dir}/${c}/autostart" ]; then
	    grep -q essential ${container_dir}/${c}/autostart
	    if [ $? -eq 0 ]; then
		container_names="${container_names} $(basename ${c})"
	    fi
	fi
    fi
done

# *very* simple dependency resolution. We do not worry about cycles in a
# graph, or conflicting dependencies. We can just ensure that container 'A'
# is started before container 'B'.
start_order=""
for container in ${container_names}; do
    if [ -e "${container_dir}/${container}/depends" ]; then
	# todo: process this if it is a list
	depend_container=$(cat ${container_dir}/${container}/depends)
	echo "${start_order}" | grep -q -w ${depend_container}
	if [ $? -ne 0 ]; then
	    # the dependency isn't in the start list already, add it first
	    start_order="${start_order} ${depend_container} ${container}"
	fi
    fi

    # no depends, just add it!
    echo "${start_order}" | grep -q -w ${container}
    if [ $? -ne 0 ]; then
	start_order="${start_order} ${container}"
    fi
done

for container in ${start_order}; do
    # TODO: add non pflask launches ...
    if [ -e "${container_dir}/${container}/pflask.cmd" ]; then
	# pflask launch
	# pflask.cmd is not signed by IMA key, so we use "/bin/bash pflask.cmd" rather than
	# calling pflask.cmd directly to work around IMA checking
	if [ -n "${single_launch}" ]; then
	    /bin/bash ${container_dir}/${container}/pflask.cmd
	else
	    rm -f /tmp/${container}-console
	    dtach -n /tmp/${container}-console /bin/bash ${container_dir}/${container}/pflask.cmd
	fi
    fi
done
