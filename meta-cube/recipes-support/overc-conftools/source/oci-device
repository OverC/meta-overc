#!/bin/bash

# we ge an action + startup json
action=$1
shift

# yank what we need out of the json
pid=$(echo "$@" | jq .pid)

## TODO:
##   - this should be run as a post-start hook to ensure that
##     any mounted /dev/ filesystems can be overriden
##   - if run as a pre-start hook, then we should bind mount
##     the parents /dev/ as /dev-host and then copy device nodes
##     from there to /dev/.
##   - this should consule the cube.device.mgr settting to decide
##     if it should run

if [ "${action}" = "up" ]; then
    echo "${pid}" > .cube.pid

    # enter tthe mount namespace to manipulate devices
    #nsenter -t ${pid} -m --preserve-credentials ls /dev/console

    # TODO: read a .cube.dev.whitelist and a .cube.dev.blacklist to manipulate
    #       the available devices
    if [ -e ".cube.dev.whitelist" ]; then
	dev_list=""
	set -o noglob
	for d in $(cat .cube.dev.whitelist); do
	    set +o noglob
	    # this expands wildcards
	    devices_expanded=$(ls $d 2> /dev/null)
	    dev_list="${dev_list} ${devices_expanded}"
	done

	for d in ${dev_list}; do
	    MINOR=$(stat -c %T $d)
	    MAJOR=$(stat -c %t $d)
	    TYPE=$(stat -c %F $d)
	    #echo "dev: $d major: $MAJOR minor: $MINOR: type: $TYPE"
	    case $TYPE in
		*block*)
		    TYPE_LETTER="b"
		    ;;
		*character*)
		    TYPE_LETTER="c"
		    ;;
		*)
		    ;;
	    esac

	    nsenter -t ${pid} -m --preserve-credentials mknod $d $TYPE_LETTER 0x$MAJOR 0x$MINOR
	done
    fi
fi

if [ "${action}" = "down" ]; then
    path=$(echo "$@" | jq .bundle | sed 's%"%%g')

    # nothing at the moment
fi
